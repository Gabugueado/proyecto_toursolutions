<?php

namespace AppBundle\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Routing\Annotation\Route;
use Doctrine\ORM\EntityManagerInterface;
use AppBundle\Entity\Articulo;
use AppBundle\Form\ArticuloType;
use AppBundle\Entity\Usuario;

/**
 * @Route("/gestionArticulo")
 */

class ManejadorArticulosController extends Controller
{
    /**
     * @Route("/nuevoArticulo/{id}", name="nuevoArticulo")
     */
    public function nuevoArticuloAction(Request $request, $id = null)
    {
        if ($id) {
            $articulorepository = $this->getDoctrine()->getRepository(Articulo::class);
            $articulo = $articulorepository->find($id);
        } else {
            $articulo = new Articulo();
        }

        //construyendo el formulario
        $form = $this->createForm(ArticuloType::class, $articulo);
        
        $form->handleRequest($request);
        if ($form->isSubmitted() && $form->isValid()) {
            $usuario = $this->getUser();
            $articulo->setUsuario($usuario);
            //rellanar el entity
            $articulo = $form->getData();
            $imagenfile = $articulo->getImagen();
            $fileName = $this->generateUniqueFileName() . '.' . $imagenfile->guessExtension();
            // Move the file to the directory where brochures are stored
            $imagenfile->move(
                $this->getParameter('articuloImg_directory'),
                $fileName
            );
            $articulo->setImagen($fileName);
            //almacenar nuevo articulo
            $entityManager = $this->getDoctrine()->getManager();
            $entityManager->persist($articulo);
            $entityManager->flush();
            return $this->redirectToRoute('articulo', array('id' => $articulo->getId()));
        }
        return $this->render(
            'gestion/nuevoArticulo.html.twig',
            array('form' => $form->createView())
        );
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    /**
     * @Route("/misArticulos", name="misArticulos")
     */
    public function misArticulosAction(Request $request)
    {
        $usuario = $this->getUser();
        $articulorepository = $this->getDoctrine()->getRepository(Articulo::class);
        $articulos = $articulorepository->findByUsuario($usuario);
        return $this->render('gestion/misArticulos.html.twig', array("articulos" => $articulos));
    }

    /**
     * @Route("/eliminarArticulo/{id}", name="eliminarArticulo")
     */
    public function eliminarArticuloAction(Request $request, $id = null)
    {
        if ($id) {
            //buscar 
            $articulorepository = $this->getDoctrine()->getRepository(Articulo::class);
            $articulo = $articulorepository->find($id);
            //borrar
            $entityManager = $this->getDoctrine()->getManager();
            $entityManager->remove($articulo);
            $entityManager->flush();
        }
            return $this->redirectToRoute('misArticulos');
        
    }
}
